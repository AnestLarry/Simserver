strategy:
  matrix:
    windows:
      imageName: 'windows-latest'
    mac:
      imageName: 'macOS-latest'
    linux:
      imageName: 'ubuntu-latest'

trigger:
- none

pool:
  vmImage: $(imageName)

steps: 
  - task: GoTool@0
    inputs:
      version: '1.22.1'
  - task: Go@0
    inputs:
      command: 'get'
      arguments: '-d'
      workingDirectory: '$(System.DefaultWorkingDirectory)'
  - bash: |
      GIT_HASH=$(git show -s --format=%H)
      BUILD_TIME=$(git show -s --format=%cd)
      GO_VERSION=$(go version)
      echo "##vso[task.setvariable variable=GIT_HASH]$GIT_HASH"
      echo "##vso[task.setvariable variable=BUILD_TIME]$BUILD_TIME"
      echo "##vso[task.setvariable variable=GO_VERSION]$GO_VERSION"
    displayName: 'Get build information'
  - task: Go@0
    inputs:
      command: 'build'
      arguments: '-ldflags "-s -w -X ''main.gitHash=$(GIT_HASH)'' -X ''main.buildTime=$(BUILD_TIME)'' -X ''main.goVersion=$(GO_VERSION)''"'
      workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Build Go application'
  - task: CopyFiles@2
    inputs:
      Contents: '**/Simserver'
      TargetFolder: '$(System.DefaultWorkingDirectory)/$(imageName)/'
  - task: CopyFiles@2
    inputs:
      Contents: '**/Simserver.exe'
      TargetFolder: '$(System.DefaultWorkingDirectory)/$(imageName)/'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/$(imageName)'
      includeRootFolder: true
      archiveType: '7z'
      sevenZipCompression: 'ultra'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(imageName)_$(Build.BuildId).7z'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: drop