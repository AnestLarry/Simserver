var app=function(){"use strict";function t(){}function e(t){return t()}function n(){return Object.create(null)}function o(t){t.forEach(e)}function r(t){return"function"==typeof t}function s(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function u(t,e){t.appendChild(e)}function a(t){t.parentNode&&t.parentNode.removeChild(t)}function c(t){return document.createElement(t)}function i(t){return document.createTextNode(t)}function l(){return i(" ")}function f(t,e,n,o){return t.addEventListener(e,n,o),()=>t.removeEventListener(e,n,o)}function p(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}let d;function h(t){d=t}const m=[],$=[];let g=[];const b=[],y=Promise.resolve();let x=!1;function v(t){g.push(t)}const _=new Set;let E=0;function w(){if(0!==E)return;const t=d;do{try{for(;E<m.length;){const t=m[E];E++,h(t),k(t.$$)}}catch(t){throw m.length=0,E=0,t}for(h(null),m.length=0,E=0;$.length;)$.pop()();for(let t=0;t<g.length;t+=1){const e=g[t];_.has(e)||(_.add(e),e())}g.length=0}while(m.length);for(;b.length;)b.pop()();x=!1,_.clear(),h(t)}function k(t){if(null!==t.fragment){t.update(),o(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(v)}}const z=new Set;function L(t,e){const n=t.$$;null!==n.fragment&&(!function(t){const e=[],n=[];g.forEach((o=>-1===t.indexOf(o)?e.push(o):n.push(o))),n.forEach((t=>t())),g=e}(n.after_update),o(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function O(t,e){-1===t.$$.dirty[0]&&(m.push(t),x||(x=!0,y.then(w)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function S(s,u,c,i,l,f,p,m=[-1]){const $=d;h(s);const g=s.$$={fragment:null,ctx:[],props:f,update:t,not_equal:l,bound:n(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(u.context||($?$.$$.context:[])),callbacks:n(),dirty:m,skip_bound:!1,root:u.target||$.$$.root};p&&p(g.root);let b=!1;if(g.ctx=c?c(s,u.props||{},((t,e,...n)=>{const o=n.length?n[0]:e;return g.ctx&&l(g.ctx[t],g.ctx[t]=o)&&(!g.skip_bound&&g.bound[t]&&g.bound[t](o),b&&O(s,t)),e})):[],g.update(),b=!0,o(g.before_update),g.fragment=!!i&&i(g.ctx),u.target){if(u.hydrate){const t=function(t){return Array.from(t.childNodes)}(u.target);g.fragment&&g.fragment.l(t),t.forEach(a)}else g.fragment&&g.fragment.c();u.intro&&((y=s.$$.fragment)&&y.i&&(z.delete(y),y.i(x))),function(t,n,s,u){const{fragment:a,after_update:c}=t.$$;a&&a.m(n,s),u||v((()=>{const n=t.$$.on_mount.map(e).filter(r);t.$$.on_destroy?t.$$.on_destroy.push(...n):o(n),t.$$.on_mount=[]})),c.forEach(v)}(s,u.target,u.anchor,u.customElement),w()}var y,x;h($)}class A{$destroy(){L(this,1),this.$destroy=t}$on(e,n){if(!r(n))return t;const o=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return o.push(n),()=>{const t=o.indexOf(n);-1!==t&&o.splice(t,1)}}$set(t){var e;this.$$set&&(e=t,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}function C(e){let n,r,s,d,h,m,$,g,b,y,x,v,_,E,w,k,z,L,O,S;return{c(){n=c("div"),r=c("form"),s=i("Files: "),d=c("input"),h=c("br"),m=c("br"),$=l(),g=c("span"),g.textContent="Progress: ",b=c("progress"),y=c("br"),x=l(),v=c("input"),_=l(),E=c("hr"),w=l(),k=c("p"),k.textContent="This is a textarea you will upload.",z=l(),L=c("form"),L.innerHTML='<textarea name="text" class="svelte-z0getp"></textarea><br/><br/> \n    <input type="submit" value="Submit" class="svelte-z0getp"/>',p(d,"type","file"),d.multiple=!0,p(d,"class","svelte-z0getp"),b.value=e[1],p(b,"max","100"),p(b,"class","svelte-z0getp"),p(v,"type","submit"),v.value="Submit",p(v,"class","svelte-z0getp"),p(L,"action","/api/upload/text"),p(L,"method","post"),p(L,"enctype","multipart/form-data"),p(n,"id","panel"),p(n,"class","svelte-z0getp")},m(t,o){!function(t,e,n){t.insertBefore(e,n||null)}(t,n,o),u(n,r),u(r,s),u(r,d),u(r,h),u(r,m),u(r,$),u(r,g),u(r,b),u(r,y),u(r,x),u(r,v),u(n,_),u(n,E),u(n,w),u(n,k),u(n,z),u(n,L),O||(S=[f(d,"change",e[3]),f(r,"submit",e[2])],O=!0)},p(t,[e]){2&e&&(b.value=t[1])},i:t,o:t,d(t){t&&a(n),O=!1,o(S)}}}function N(t,e,n){let o,r=0;return[o,r,function(t){t.preventDefault();const e=new FormData;for(let t=0;t<o.length;t++)e.append("files",o[t]);const s=new XMLHttpRequest;s.open("POST","/api/upload/"),s.upload.addEventListener("progress",(t=>{n(1,r=t.loaded/t.total*100)})),s.send(e)},function(){o=this.files,n(0,o)}]}return new class extends A{constructor(t){super(),S(this,t,N,C,s,{})}}({target:document.body})}();
//# sourceMappingURL=bundle.js.map
